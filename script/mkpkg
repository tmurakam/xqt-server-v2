#!/usr/bin/ruby

$debug = false

scriptdir = File.expand_path(File.dirname($0))
topdir    = File.expand_path(scriptdir + "/..")
distfiledir = topdir + "/distfile"
destdir = File.expand_path("./dest")
ipkgdir = File.expand_path("./.ipktmp")

$LOAD_PATH.push(scriptdir + "/lib")
require "pkg"

#SetupEnv()

if (ARGV.size < 1)
    STDERR.puts "usage: #{$0} <command> <pkgdef file>..."
    exit 1
end

cmd = ARGV.shift
cmds = []
if (cmd == "World")
    cmds = ["cleanup", "source", "build", "install", "ipkg"]
else
    cmds = [cmd]
end

deffiles = ARGV
if (deffiles.size == 0)
    if (FileTest.exist?("pkgdef.list"))
	IO.readlines("pkgdef.list").each do |line|
	    line.chop!
	    next if (line =~ /^#/ || line =~ /^\s*$/)
	    deffiles.push(line)
	end
    else
	deffiles = ["pkgdef"]
    end
end

deffiles.each do |file|

    # パッケージ定義を読み込む
    pkg = Pkgdef.new
    pkg.SetDefine("destdir", destdir)
    pkg.SetDefine("scriptdir", scriptdir)
    pkg.SetDefine("ipkgdir", ipkgdir)
    pkg.SetDefine("distfiledir", distfiledir)

    pkg.Load(scriptdir + "/config.def")
    pkg.Load(file)

    # sanity check...
    builddir = pkg.GetDefine("builddir")
    if (builddir == nil)
	pkg.SetDefine("builddir", ".")
    end

    cmds.each do |cmd|
	case cmd
	when "cleanup"
	    if (pkg.GetDefine("noclean") == nil || builddir != ".")
		system("/bin/rm -rf #{builddir} #{destdir}")
	    end
	when "source"
	    pkg.getSource
	    pkg.ExecSection("prep")
	when "ipkg"
	    pkg.BuildIpkg
	else
	    pkg.ExecSection(cmd)
	end
    end
end

